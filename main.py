from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from config import TOKEN
from handlers import tasks, progress
from utils.storage import load_data, save_data
import asyncio

bot = Bot(token=TOKEN)
dp = Dispatcher()

user_progress = load_data()

game_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚úç –í–≤–µ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏–µ")],
        [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")],
        [KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É")],
        [KeyboardButton(text="üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")],
        [KeyboardButton(text="üì© –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start(message: types.Message):
    user_id = str(message.from_user.id)
    if user_id not in user_progress:
        user_progress[user_id] = {"points": 0, "tasks": []}
        save_data(user_progress)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–µ–º –≤ –∏–≥—Ä–æ–≤–æ–π —Ñ–æ—Ä–º–µ. –ù–∞—á–Ω–µ–º?", reply_markup=game_keyboard)

tasks.register_handlers(dp)
progress.register_handlers(dp)

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
